---
title: "Git Good (Enough)"
subtitle: A brief introduction to Git
format:
    revealjs:
        slide-number: true
        chalkboard:
          buttons: true
        preview-links: auto
        logo: ../../images/logo.png
        theme: [../../custom_slides.scss]

footer: \
    <a href="https://opensourcecourse.dev/modules/git/overview.html">overview</a> /\
    <a href="https://github.com/opensourcecourse/opencourse/blob/main/modules/git/slides.qmd">source</a> /\
    <a href="https://opensourcecourse.dev/modules/git/exercises.html">exercises</a>
---

## Overview

</br>

::: {style="font-size: 1.4em; text-align: center; presentation-line-height: 1.0"}

- A conceptual framework
- Common git commands
- Branching models

:::


## The Problem with Git Tutorials

::: {.r-stack}
![](images/thought_tools.png)
:::


## Conceptual Framework {.nostretch auto-animate="true"}

</br>
First we create a new file.

```{.python filename="myscript.py"}
def add_numbers(num1, num2):
    """Add two things together"""
    answer = num1 + num2
    print(f"{num1} + {num2} is {answer}")

add_numbers(2, 2)
```


## Conceptual Framework {.nostretch auto-animate="true"}
</br>

Changes from an empty repo to current state

:::{.callout-note appearance="minimal"}
## File Difference

[+1] [def add_numbers(num1, num2):]{style="color: green;"}

[+2]    ["""Add two things together"""]{style="color: green;"}

[+3]    [answer = num1 + num2]{style="color: green;"}

[+4]    [print(f"{num1} + {num2} is {answer}")]{style="color: green;"}
:::


## Conceptual Framework {.nostretch auto-animate="true"}
</br>

We propose saving the changes

:::{.callout-warning appearance="minimal"}
## Added changes

[+1] [def add_numbers(num1, num2):]{style="color: green;"}

[+2]    ["""Add two things together"""]{style="color: green;"}

[+3]    [answer = num1 + num2]{style="color: green;"}

[+4]    [print(f"{num1} + {num2} is {answer}")]{style="color: green;"}
:::


## Conceptual Framework {.nostretch auto-animate="true"}
</br>

Then commit to saving them

:::{.callout-tip appearance="minimal"}
## Committed (saved) changes [1989ee1]

[+1] [def add_numbers(num1, num2):]{style="color: green;"}

[+2]    ["""Add two things together"""]{style="color: green;"}

[+3]    [answer = num1 + num2]{style="color: green;"}

[+4]    [print(f"{num1} + {num2} is {answer}")]{style="color: green;"}
:::


## Conceptual Framework {auto-animate="true"}
</br>

This creates our first commit!
</br>
</br>
```{mermaid}

gitGraph
   commit id: "0-1989ee1"
```

## Conceptual Framework {.nostretch auto-animate="true"}

Each commit has metadata

:::{.callout-tip appearance="minimal"}
## [1989ee1]

[+1] [def add_numbers(num1, num2):]{style="color: green;"}

[+2]    ["""Add two things together"""]{style="color: green;"}

[+3]    [answer = num1 + num2]{style="color: green;"}

[+4]    [print(f"{num1} + {num2} is {answer}")]{style="color: green;"}
:::


## Conceptual Framework {.nostretch auto-animate="true"}

Each commit has metadata

:::{.callout-tip appearance="minimal"}
## [1989ee1]
    commit message  => "First file"
    committer       => Bob Belcher <bobs@gmail.com>
    commit date     => Sat Nov 8 11:13:49 2014 +0100
    author          => Bob Belcher <bobs@gmail.com>
    author date     => Sat Nov 8 11:13:49 2014 +0100
    tree            => 9c435a86e664be00...
    parents         => [0d973e9c4353ef3..., ]

:::





## Conceptual Framework {.nostretch auto-animate="true"}

</br>

```{.python filename="myscript.py"}

def add_numbers(num1, num2):
    """Add two things together"""
    answer = num1 + num2
    print(f"{num1} + {num2} is {answer}")

add_numbers(2, 2)
```

## Conceptual Framework: Edits {.nostretch auto-animate="true"}

</br>

```{.python filename="myscript.py"}

def add_numbers(num1, num2):
    """Add two things together"""
    return num1 + num2

assert add_numbers(1, 1) == 2
```

## Conceptual Framework: Edits {.nostretch auto-animate="true"}
</br>


:::{.callout-note appearance="minimal"}

## File Difference

[-4 answer = num1 + num2]{style="color: red;"}

[-5 print(f"{num1} + {num2} is {answer}")]{style="color: red;"}

[-7 add_numbers(2, 2)]{style="color: red;"}

[+4 return num1 + num2]{style="color: green;"}

[+6 assert add_numbers(1, 1) == 2]{style="color: green;"}


:::

## Conceptual Framework: Edits {.nostretch auto-animate="true"}

</br>

```{mermaid}
%%| fig-width: 4.0
flowchart LR
  A[Edit]
```

## Conceptual Framework: Edits {.stretch auto-animate="true"}

```{mermaid}
gitGraph
   commit id: "Alpha"
   commit id: "Beta"
   commit id: "Gamma"
   branch develop
   commit id: "Gamma2"
   commit id: "Gamma3"
   checkout main
   merge develop

```

## Basic Git Commands

::: {.incremental}

::: {style="font-size: 1.3em; text-align: center; presentation-line-height: 1.0"}
* clone - download repo
* add - propose changes to save
* commit - save changes
* status - see state summary
* push - send changes somewhere
* pull - download and apply changes
* checkout - switch to another branch/commit
:::

:::


## clone
</br>








:::{.r-stack}

```{mermaid}
%%| fig-width: 10.0
flowchart LR
  A[Edit] --> B(Stage)
  B --> C((Commit))
  style A fill:#f9f,stroke:#333,stroke-width:4px
```

:::





